#!/usr/bin/env bash

set -euox pipefail

# JSON file containing AppImage descriptions
JSON=${1:-}
if [ -z "$JSON" ]; then
  echo "ERROR: Unspecified JSON file."
  exit 1
fi

for APPIMAGE in $(jq -c '.[]' "$JSON")
do
  # Create directory for AppImages
  if [ ! -d "/opt/appimages" ]; then
    mkdir -p /opt/appimages
  fi

  # Parse JSON into variables
  NAME=$(echo "$APPIMAGE" | jq -r '.name')
  SOURCE=$(echo "$APPIMAGE" | jq -r '.source')
  PATTERN=$(echo "$APPIMAGE" | jq -r '.pattern')

  # Query the Github REST API for releases.
  if [ "${PATTERN-}" == "null" ]; then
    ASSET_URL=$(curl -sS -X GET "https://api.github.com/repos/$SOURCE/releases/latest" | jq -r '.assets | map(select(.name | contains("AppImage"))) | first | .browser_download_url')
  else
    ASSET_URL=$(curl -sS -X GET "https://api.github.com/repos/$SOURCE/releases" | jq --arg PATTERN "$PATTERN" -r 'map(select(.name | test($PATTERN))) | first | .assets | map(select(.name | contains("AppImage"))) | first | .browser_download_url')
  fi

  # Download AppImage to /usr/local/bin
  if [ -n "${ASSET_URL-}" ]; then
    curl -sSL "$ASSET_URL" -o "/opt/appimages/$NAME.AppImage"
    chmod +x "/opt/appimages/$NAME.AppImage"

    # Extract AppImage to temporary directory.
    if [ ! -d "/tmp/$NAME" ]; then
      mkdir /tmp/$NAME
    fi
    pushd /tmp/$NAME &> /dev/null
    /opt/appimages/$NAME.AppImage --appimage-extract

    # Install Desktop Entry
    if [ ! -d "/usr/local/share/applications" ]; then
      mkdir "/usr/local/share/applications"
    fi
    cp squashfs-root/*.desktop /usr/local/share/applications/

    # Install Icons
    if [ ! -d "/usr/local/share/icons" ]; then
      mkdir "/usr/local/share/icons"
    fi
    rsync -a squashfs-root/usr/share/icons/ /usr/local/share/icons/
    if [ $NAME == "MediaElch" ]; then
      cp squashfs-root/MediaElch.png /usr/local/share/icons/
    fi

    # Teardown
    popd &> /dev/null
    rm -rf /tmp/$NAME

  else
    echo "Unable to determine asset url for $NAME."
    exit 1
  fi
done
